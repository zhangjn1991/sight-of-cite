// Generated by CoffeeScript 1.7.1
angular.module('sightApp').controller("InfoBarController", function($scope) {
  var self;
  self = this;
  $scope.globalCtrl.infobarCtrl = this;
  this.entity = {};
  this.isEditing = false;
  this.tempEntityDetail = null;
  this.startEdit = function() {
    this.tempEntityDetail = this.tempEntityDetail || {};
    this.overwriteObject(this.entity, this.tempEntityDetail);
    return this.isEditing = true;
  };
  this.saveEdit = function() {
    var actionName, isNewPaper;
    isNewPaper = this.isNewEntity(this.entity);
    this.overwriteObject(this.tempEntityDetail, this.entity);
    this.isEditing = false;
    actionName = isNewPaper ? "add_paper" : "update_paper";
    console.log("AJAX: " + actionName);
    return $.post($scope.globalCtrl.getServerAddr(), {
      action: actionName,
      data: this.entity
    }, function(res) {
      console.log(res);
      if (isNewPaper) {
        return self.entity.pub_id = res.pub_id;
      }
    }, 'json');
  };
  this.cancelEdit = function() {
    this.tempEntityDetail = null;
    return this.isEditing = false;
  };
  this.setCurrentEntity = function(entity) {
    this.entity = entity;
    if (this.isNewEntity(entity)) {
      return this.startEdit();
    }
  };
  this.removeCurrentEntity = function() {
    return this.entity = {};
  };
  this.overwriteObject = function(fromObj, toObj) {
    var k, v, _results;
    _results = [];
    for (k in fromObj) {
      v = fromObj[k];
      _results.push(toObj[k] = v);
    }
    return _results;
  };
  this.isNewEntity = function(entity) {
    return !((entity != null) && (entity.pub_id != null));
  };
  return 0;
});
